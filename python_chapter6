함수 기초

1. 함수 : 간단히 말해 처리를 정리한 프로그램이다.

2. 내장 함수 : 파이썬에 미리 정의된 함수

3. 객체(오브젝트) : 변수에 할당할 수 있는 요소
대입되는 값 :  인수 = 파라미터라고 부르는 경우도 있다.

4. 메서드 : 어떠한 값에 대해 처리를 하는 것
값.메서드명()
역할은 함수와 동일하다.

5. 문자열형 메서드

upper() : 모든 문자열을 대문자로 반환
count() : () 안에 들어 있는 문자열에 요소가 몇 개 포함되어 있는지 알려주는 메서드

사용법

변수.upper()
변수.count(객체) 

문자열형 메서드
: fromat()
임의의 값을 대입한 문자열을 생성할 수 있다.
문자열 내에 {}를 포함하는 것이 특징이다.

리스트형 메서드
: 객체의 인덱스 번호를 찾는 메서드
index()

리스트형 메서드
: 오름차순 : sort()

리스트 요소의 순서를 반대로
: reverse()

함수 작성
: def 함수형(인수):

인수 : 함수에 전달하는 값
def 함수명(인수):

복수 개의 인수
: () 안에 쉼표로 구분한다.

인수의 초깃값
: 초깃값을 설정하면 함수형(인수)로 호출시 인수를 생략한다.

함수 인포트(가져오기)
: import

클래스

객체
: 변수, 함수가 뭉쳐서 정리된 물건을 말한다.

생성자 : 클래스를 만들 때 자동으로 호출되는 특수 함수

메서드 : 클래스가 갖는 처리, 즉 함수이다.

멤버 : 클래스가 가지는 값

클래스(멥버와 생성자)
: 각각의 객체는 어떤 값을 가질지, 어떻게 처리할지 결정하기 위해 객체의 구조를 결정하는 설계도가 필요하다.
이 설계도를 클래스라고 한다.

클래스를 호출할 때 작동하는 메서드를 생성자라고 한다.

생성된 객체의 멤버를 참조할 때는 '객체.변수명' 으로 직접 참조 할 수 있다.

직접 참조에서는 멤버의 변경도 가능하다.

클래스(메서드)
: 멥버 앞에 self.를 붙여야 한다.
호출할때는 객체.메서드명을 사용한다.

클래스(상속, 오버라이트, 슈퍼)
- 상속 : 기존의 클래스를 바탕으로 메서드나 멤버를 추가하거나, 일부만 변경하여 새로운 클래스를 만들 수 있다.

문자열 포맷 지정
: format()

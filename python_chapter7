Numpy
: 벡터나 행렬 계산을 빠르게 하도록 특화 된 기본 라이브러리
그 밖에 사용하는 라이브러리는 Scipy, Pandas, scikit-learn, Matplotlib 등이 있다.

 import numpy as np

1차원 배열 : 배열을 고속으로 처리하는 ndarray 클래스가 있다.
np.array()를 사용한다.
np.array([1,2,3])

일정한 간격으로 증감시킨 값의 요소를 X개 만들어준다.
np.arange()

1차원 : 벡터
2차원 : 행렬
3차원 이상 : 텐서(행렬의 개념 확장)

1차원 배열의 계산
: 리스트에서는 계산하기 위해 루프시킨 뒤에 하나씩 더했지만,ndarray에서는 루프를 사용하지 않아도 된다.
ndarray의 산술 연산은 같은 위치에 있는 요소끼리 계산된다.

인덱스 참조와 슬라이스
: 1차원 배열은 벡터이므로 인덱스를 참조한 곳은 스칼라값이 된다.

주의사항
: 배열을 다른 변수에 그대로 대입한 경우 해당 변수의 값을 변경하면 원래 배열의 값도 변경된다.
두 개의 변수를 복사해서 만들고 싶을때 : copy() 메서드를 사용한다.

view와 copy

view : 원래 배열의 데이터를 가리키는 것

copy : 슬라이스를 복사본으로 만들려면 앞 절에서 설명한대로 copy() 메서드를 사용하여
	arr[:].copy()로 한다.

부울 인덱스 참조
: []안에 논리값 배열을 사용하여 요소를 추출하는 방법을 말한다.

범용 함수
: 배열의 각 요소에 대한 연산 결과를 반환하는 함수
요소별로 계산하므로 다차원 배열에서도 사용할 수 있다.

인수가 하나인 경우
: 요소의 절대값을 반환하는 np.abs()함수, 요소의 e(자연 로그의 밑)의 거듭제곱을 반환하는 np.exp()함수,
요소의 제곱근을 반환하는 np.sqrt()함수 등이 있다.

인수가 두 개인 경우
: 요소 간의 합을 반환하는 np.add()함수, 요소간의 차이를 반환하는 np.subtract()함수, 
요소간의 최댓값을 저장한 배열을 반환하는 np.maximum()함수 등이 있다.

집합 함수
: 수학의 집합 연산을 수행하는 함수이다.
1차원 배열만을 대상으로 한다.
대표적인 집합 함수로는 배열 요소에서 중복을 제거하고 정렬한 결과를 반환하는 np.unique()함수,
배열x와 y의 합집합을 반환하는 np.unionld(x,y)함수, 배열 x와 y의 교집합을 정렬해서 반환하는 np.intersectld(x, y)함수,
배열 x에서 배열 y를 뺀 차집합을 정렬해서 반환하는 np.setdiffld(x, y)함수 등이 있다.

난수
: np.random모듈로 난수를 생성할 수 있다.
난수 - 정의된 범위내에서 무작위로 추출된 수

np.random()은 0 이상 1 미만의 난수를 생성하는 np.random.tand()함수, 
x 이상 y 미만의 정수를 z개를 생성하는 np.random.randint(x,y,z)함수
가우스 분포를 따르는 난수를 생성하는 np.random.normal() 함수 등이 있다.

2차원 배열
: 행렬에 해당한다.
np.array([리스느, 리스트])로 표기한다.

ndarray배열.shape로 각 차원의 요소 수를 반환할 수 있다.

ndarray배열.reshape(a, b)로 지정한 인수를 같은 모양의 행렬로 변환한다.

인덱스 참조와 슬라이스
: 2차원 배열의 경우, 인덱스를 하나만 지정하면 임의의 행을 배열로 가져올 수 있다.

axis
: 좌표축과 같다.
열마다 처리하는 축 : axis=0
행마다 처리하는 축 : axis=1

sum() 메서드에 인수를 지정하지 않으면 단순히 전체 합계가 스칼라로 반환되고, 

sum()메서드에 인수 axis=0을 지정하면 세로로 더해져서 요소가 세 개인 1차원 배열이 되고, 

sum()메서드에 인수 axis=1을 지정하면 가로로 더해져서 요소가 두 개인 1차원 배열이 된다.

팬시 인덱스 참조
: 인덱스의 배열을 이용하는 방법

ndarray 배열에서 특정 순서로 행을 추출하려면 그 순서를 나타내는 배열을 인덱스 참조로 전달하면 된다.
팬시 인덱스 참조는 슬라이스와는 달리 항상 원본 데이터의 복사본을 반환하여 새로운 요소를 작성하게 된다.

전치 행렬
: 행렬에서 행과 열을 바꾸는 것
내적 계산등에 사용한다.
np.transpose()함수, .T 를 사용한다.

정렬
: 리스트형과 마찬가지로 sort()메서드로 정렬할 수 있다.
2차원 배열의 경우 0을 인수를 하면 열 단위로 요소가 정렬되며, 1을 인수로 하면 행 단위로 요소가 정렬된다.
np.sort()함수는 정렬된 배열의 복사본을 반환한다.

머신러닝에서는 자주 사용되는 함수로 argsort()메서드가 있다.
정렬된 배열의 인덱스를 반환한다.

행렬 계산
: 두 행렬의 행렬곱을 반환하는 np.dot(a ,b)와 노름을 반환하는 np.linalg.norm(a) 등이 있다.
np.dot(a ,b) 함수를 실행하면 행벡터 a와 열벡터 b의 행렬곱이 생성된다.

노름은 벡터의 길이를 반환하는 것으로, 요소의 제곱값을 더해 루트를 씌운 것이다.

통계 함수
: 배열 전체 또는 특정 축을 중심으로 수학적 처리를 수행하는 함수 또는 메서드
배열의 합을 반환하는 sum()메서드가 있다.

자주 사용되는 메서드
: 배열 요소의 평균을 반환하는 mean(), np.average(), 최댓값/최솟값을 반환하는 np.max()/np.min()
요소의 최댓값 또는 최솟값의 인덱스 번호를 반환하는 np.argmax(), np.argmin() 등이 있다.
표준 편차와 분산을 반환하는 메서드 np.std(), np.var()

브로드캐스트
: 크기가 다른 넘파이 배열간의 연산에는 브로드캐스트 라는 처리가 자동으로 이루어진다.
두 ndarray 연산시 크기가 작은 배열의 행과 열을 자동으로 큰 배열쪽에 맞춰준다.
두 배열의 행이 일치하지 않을 경우에는 행이 적은 쪽이 많은 쪽의 수에 맞추어 부족한 부분을 기준으로 복사한다.
